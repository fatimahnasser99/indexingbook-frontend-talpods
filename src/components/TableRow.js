import React from 'react';
import { deleteContact } from '../services';
import { editContact } from '../redux/actions/contactsActions';
import { useDispatch } from 'react-redux';
const TableRow = (props) => {
	const dispatch = useDispatch();
	return (
		<tr id={`${props.name[0]}-${props.id}`}>
			<td>{props.name}</td>
			<td>{props.phone}</td>
			<td>{props.email}</td>
			<td>
				<svg
					width='20'
					height='20'
					viewBox='0 0 20 20'
					fill='none'
					onClick={() => dispatch(editContact(props))}
					xmlns='http://www.w3.org/2000/svg'>
					<path
						d='M5.0332 14.6875C5.07227 14.6875 5.11133 14.6836 5.15039 14.6777L8.43555 14.1016C8.47461 14.0937 8.51172 14.0762 8.53906 14.0469L16.8184 5.76758C16.8365 5.74951 16.8508 5.72805 16.8606 5.70442C16.8704 5.68079 16.8755 5.65546 16.8755 5.62988C16.8755 5.6043 16.8704 5.57897 16.8606 5.55535C16.8508 5.53172 16.8365 5.51026 16.8184 5.49219L13.5723 2.24414C13.5352 2.20703 13.4863 2.1875 13.4336 2.1875C13.3809 2.1875 13.332 2.20703 13.2949 2.24414L5.01562 10.5234C4.98633 10.5527 4.96875 10.5879 4.96094 10.627L4.38477 13.9121C4.36577 14.0167 4.37255 14.1244 4.40454 14.2258C4.43654 14.3273 4.49276 14.4193 4.56836 14.4941C4.69727 14.6191 4.85938 14.6875 5.0332 14.6875V14.6875ZM6.34961 11.2812L13.4336 4.19922L14.8652 5.63086L7.78125 12.7129L6.04492 13.0195L6.34961 11.2812V11.2812ZM17.1875 16.3281H2.8125C2.4668 16.3281 2.1875 16.6074 2.1875 16.9531V17.6562C2.1875 17.7422 2.25781 17.8125 2.34375 17.8125H17.6562C17.7422 17.8125 17.8125 17.7422 17.8125 17.6562V16.9531C17.8125 16.6074 17.5332 16.3281 17.1875 16.3281Z'
						fill='#000F92'
					/>
				</svg>
				<svg
					width='20'
					height='20'
					onClick={() => deleteContact(props.name[0].toUpperCase(), props.id)}
					viewBox='0 0 20 20'
					fill='none'
					xmlns='http://www.w3.org/2000/svg'>
					<path
						d='M8.33332 5H11.6667C11.6667 4.55797 11.4911 4.13405 11.1785 3.82149C10.8659 3.50893 10.442 3.33333 9.99999 3.33333C9.55796 3.33333 9.13404 3.50893 8.82148 3.82149C8.50892 4.13405 8.33332 4.55797 8.33332 5V5ZM6.66666 5C6.66666 4.11595 7.01785 3.2681 7.64297 2.64298C8.26809 2.01786 9.11593 1.66667 9.99999 1.66667C10.884 1.66667 11.7319 2.01786 12.357 2.64298C12.9821 3.2681 13.3333 4.11595 13.3333 5H17.5C17.721 5 17.933 5.0878 18.0892 5.24408C18.2455 5.40036 18.3333 5.61232 18.3333 5.83333C18.3333 6.05435 18.2455 6.26631 18.0892 6.42259C17.933 6.57887 17.721 6.66667 17.5 6.66667H16.765L16.0267 15.2833C15.9557 16.1154 15.575 16.8905 14.9599 17.4553C14.3448 18.0201 13.5401 18.3334 12.705 18.3333H7.29499C6.45991 18.3334 5.65522 18.0201 5.04011 17.4553C4.42501 16.8905 4.0443 16.1154 3.97332 15.2833L3.23499 6.66667H2.49999C2.27898 6.66667 2.06701 6.57887 1.91073 6.42259C1.75445 6.26631 1.66666 6.05435 1.66666 5.83333C1.66666 5.61232 1.75445 5.40036 1.91073 5.24408C2.06701 5.0878 2.27898 5 2.49999 5H6.66666ZM12.5 10C12.5 9.77899 12.4122 9.56702 12.2559 9.41074C12.0996 9.25446 11.8877 9.16667 11.6667 9.16667C11.4456 9.16667 11.2337 9.25446 11.0774 9.41074C10.9211 9.56702 10.8333 9.77899 10.8333 10V13.3333C10.8333 13.5543 10.9211 13.7663 11.0774 13.9226C11.2337 14.0789 11.4456 14.1667 11.6667 14.1667C11.8877 14.1667 12.0996 14.0789 12.2559 13.9226C12.4122 13.7663 12.5 13.5543 12.5 13.3333V10ZM8.33332 9.16667C8.55434 9.16667 8.7663 9.25446 8.92258 9.41074C9.07886 9.56702 9.16666 9.77899 9.16666 10V13.3333C9.16666 13.5543 9.07886 13.7663 8.92258 13.9226C8.7663 14.0789 8.55434 14.1667 8.33332 14.1667C8.11231 14.1667 7.90035 14.0789 7.74407 13.9226C7.58779 13.7663 7.49999 13.5543 7.49999 13.3333V10C7.49999 9.77899 7.58779 9.56702 7.74407 9.41074C7.90035 9.25446 8.11231 9.16667 8.33332 9.16667V9.16667ZM5.63332 15.1417C5.66883 15.5578 5.8593 15.9455 6.16703 16.2279C6.47475 16.5103 6.87731 16.6669 7.29499 16.6667H12.705C13.1224 16.6665 13.5245 16.5097 13.8319 16.2274C14.1393 15.945 14.3295 15.5576 14.365 15.1417L15.0917 6.66667H4.90832L5.63499 15.1417H5.63332Z'
						fill='#FF0000'
					/>
				</svg>
			</td>
		</tr>
	);
};

export default TableRow;
